/**
 * Copyright 2015-2115 the original author or authors.
 *
 * Licensed under the MIT Licensed
 *
 * @email   dragonmail2001@163.com
 * @author  jinglong.zhaijl
 * @date    2015-10-24
 * @Source: https://github.com/dragonmail2001
 *
 */
var ghost = require(process.argv[2]+'/aaaa-test-api/cfg/ghost.js'); 
var gapi = require(process.argv[2]+'/aaaa-test-api/cmn/gapi.js');
//var rdis = require(process.argv[2]+'/aaaa-test-api/cmn/rdis.js');

/**
 * 本例子用来演示如何浏览器中向网关请求一张图片并返回,后台服务地址为淘宝cdn的一张图片
 * http://img.alicdn.com/tfs/TB1EPnIQXXXXXaSXpXXXXXXXXXX-1133-35.jpg
 *
 * 关于验证码的实现方式：
 * 1、后台生成图片验证码，并上传到oss或者其它文件服务器并把具体链接地址和验证码内容返回给网关，
 *    网关负责把验证码内容存入缓存redis
 * 2、网关生成验证码内容，告知后端服务生成对应图片并且把图片以流的形式返回给网关，网关接受到图
 *    片流后在返回给前端浏览器，同时网关负责把验证码内容存入缓存redis
 *  
 * 如果是滑块类型的验证码建议采用第一种方式实现
 * 如果时图片验证码建议采用第二种方式实现，本例针对第二种给出实现，
 * 第一种实现方式和普通请求一样参见formpost.cfg或者formget.cfg
 *
 */
 class Picture extends gapi.Objc {
    constructor() {
        super();      
    }   

    conf() {
        return {
            auth : false,
            type : "file", 
            itfs : [{
                meth : "get",
                type : "http",
                uuid : "Picture",                                //全局唯一码，对应每个后端服务在当前文件中要唯一
                host : "img.alicdn.com",                     //后端服务地址，此值要配置在cfg目录中的ghost中
                port : 80,                                     //后端服务端口，此值要配置在cfg目录中的ghost中
                iurl : "/tfs/TB1EPnIQXXXXXaSXpXXXXXXXXXX-1133-35.jpg",                 //后端服务context路径
                func : this.func,
                next : []
            }]
        };
    }

    _fun(req,res,fld,fle) {
        this.log(this.conf(), {ctx:req}, 'req')

        this.code = this.generate2();
        this.mobile = this.getParameter(req, 'mobile');
        let data = {
            "objv" : {"code": this.code} 
        };
        
        this.log(this.conf(), {dat:data,ctx:req} , 'java-in');
        return data;
    }

    _out(req, res, fld, fle) {
        const rslt = this.rslt(req, 'Picture');
        if(rslt != null && rslt.succ == true) {
        	//rdis.setByKey(this.mobile, this.code);
        }
        this.log(this.conf(), {dat:rslt,ctx:req} , 'java-out');
        return rslt.objv;
    }

	generate2(){
	    var rstr='', cstr = ['0','1','2','3','4','5','6','7','8','9'];
	    for(var i = 0; i < 4 ; i ++) {
	         var id = Math.ceil(Math.random()*10)%10;
	         rstr += cstr[id];
	     }
	    return rstr;
	}    
}

//必须放在文件的最后面
exports = module.exports = Picture;