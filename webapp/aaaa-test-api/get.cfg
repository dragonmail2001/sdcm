/**
 * Copyright 2015-2115 the original author or authors.
 *
 * Licensed under the MIT Licensed
 *
 * @email   dragonmail2001@163.com
 * @author  jinglong.zhaijl
 * @date    2015-10-24
 * @Source: https://github.com/dragonmail2001
 *
 */
var ghost = require(process.argv[2]+'/aaaa-test-api/cfg/ghost.js'); 
var gapi = require(process.argv[2]+'/aaaa-test-api/cmn/gapi.js');

/**
 *
 * 本例子用来演示如何响应浏览器post请求【不传文件的】
 *
 * 后端地址为模拟地址非真实存在，如果验证需要换成对应
 * 的ip、端口和请求路径
 *
 */
 class Get extends gapi.Objc {
    constructor() {
        super();      
    }   

    conf() {
        return {
            auth : false,
            type : "json", 
            itfs : [{
                meth : "Get",
                type : "http",
                uuid : "Get",                                
                host : "127.0.0.1",                          
                port : 8001,                                     
                iurl : "/aaa-test-api/mock.cgi",                 
                func : this.func,
                next : []
            }]
        };
    }

    _fun(req,res,fld,fle) {
        this.log(this.conf(), {ctx:req}, 'req')

        //获取输入参数并且做一些逻辑处理
        //仅限于非阻塞模式的或者redis缓存操作
        this.param1 = this.getParameter(req, 'param1');
        this.param2 = this.getParameter(req, 'param2');
        this.param3 = this.getParameter(req, 'param3');
        this.param4 = this.getParameter(req, 'param4');
        
        //返回值可以是具体的内容也可以是
        //param.stop 后续串行接口不再执行但是并行接口继续
        //param.exit 后续所有接口不再执行同时终止程序，直接响应退出
        //param.jump 跳过当前接口，继续执行下一个串行接口或者并行接口
        let data = {
            "iurl" : "/aaaa-test-api/mock.cgi", //这里有机会改变目标地址
            "objv" : {"param1": "param1",
                "param2": "param2",
                "param3": "param3",
                "param4": "param4",
            } 
        };
        
        this.log(this.conf(), {dat:data,ctx:req} , 'java-in');
        return data;
    }

    _out(req, res, fld, fle) {
        const rslt = this.rslt(req, 'Get');
        this.log(this.conf(), {dat:rslt,ctx:req} , 'java-out');
        return rslt.objv;
    }   
}

//必须放在文件的最后面
exports = module.exports = Get;